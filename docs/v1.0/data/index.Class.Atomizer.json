{"id":246,"name":"Atomizer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Atomizer\r\n-----\r\nAn utility class for loading/parsing and creating templates."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This class is responsible for loading the templates from the template folder.\r\nIt also provides a function to build the component tree from the HTML string."}]},{"tag":"@author","content":[{"kind":"text","text":"Sujal Choudhari <sjlchoudhari.gmail.com>"}]}]},"children":[{"id":247,"name":"templateFolders","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"comment":{"summary":[{"kind":"text","text":"The folder where the templates are stored."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"Only the templated from this folder will be preloaded loaded.\r\nIf there are many template folders then those components will have to be loaded manually.\r\nor change the template folder and preload the templates again."}]},{"tag":"@author","content":[{"kind":"text","text":"Ansh Sharma"}]}]},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":34,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L34"}],"type":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":248,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":249,"name":"baseDir","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":35,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L35"}],"type":{"type":"intrinsic","name":"string"}},{"id":250,"name":"htmlDir","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":36,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L36"}],"type":{"type":"intrinsic","name":"string"}},{"id":251,"name":"cssDir","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":37,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L37"}],"type":{"type":"intrinsic","name":"string"}},{"id":252,"name":"jsDir","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":38,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L38"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[249,250,251,252]}],"sources":[{"fileName":"atom/atomizer.ts","line":34,"character":36,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L34"}]}}]},"defaultValue":"...","is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"templateFolders"},"text":{"comment":"<p>The folder where the templates are stored.</p>\n<h5>Remarks:</h5><p>Only the templated from this folder will be preloaded loaded.\nIf there are many template folders then those components will have to be loaded manually.\nor change the template folder and preload the templates again.</p>\n<h5>Author:</h5><p>Ansh Sharma</p>\n"},"parentId":246},{"id":253,"name":"filesToInclude","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":41,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L41"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Set","qualifiedName":"Set","package":"typescript"},"defaultValue":"...","is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"filesToInclude"},"text":{},"parentId":246},{"id":254,"name":"templates","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"comment":{"summary":[{"kind":"text","text":"The preloaded templates (the default ones)"}]},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":45,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L45"}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":255,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":45,"character":29,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L45"}],"indexSignature":{"id":256,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":257,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":287,"name":"AtomizerTemplate"}}}}},"defaultValue":"...","is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"templates"},"text":{"comment":"<p>The preloaded templates (the default ones)</p>\n"},"parentId":246},{"id":258,"name":"loadTemplate","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":52,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L52"}],"signatures":[{"id":259,"name":"loadTemplate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Load a template from the template folder"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"New atomizer template"}]}]},"parameters":[{"id":260,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the template file"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>The name of the template file</p>\n"}},{"id":261,"name":"templateFolderIndex","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"},"text":{}}],"type":{"type":"reference","id":287,"name":"AtomizerTemplate"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.loadTemplate","hash":"loadTemplate.loadTemplate"},"text":{"comment":"<p>Load a template from the template folder</p>\n<h5>Returns:</h5><p>New atomizer template</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":52,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L52"}],"parentId":258}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"loadTemplate"},"text":{},"parentId":246},{"id":262,"name":"preloadTemplates","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":71,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L71"}],"signatures":[{"id":263,"name":"preloadTemplates","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Preload All the templates from the template folder."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A dictionary of all the preloaded templates with their names as keys."}]}]},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":264,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"atom/atomizer.ts","line":71,"character":38,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L71"}],"indexSignature":{"id":265,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":266,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":287,"name":"AtomizerTemplate"}}}}},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.preloadTemplates","hash":"preloadTemplates.preloadTemplates"},"text":{"comment":"<p>Preload All the templates from the template folder.</p>\n<h5>Returns:</h5><p>A dictionary of all the preloaded templates with their names as keys.</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":71,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L71"}],"parentId":262}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"preloadTemplates"},"text":{},"parentId":246},{"id":267,"name":"buildComponentTreeFromAtom","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":114,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L114"}],"signatures":[{"id":268,"name":"buildComponentTreeFromAtom","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Build the component tree from the atom."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The root component of the component tree."}]}]},"parameters":[{"id":269,"name":"atom","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The atom to be parsed and built into a component tree"}]},"type":{"type":"reference","id":231,"name":"default"},"text":{"comment":"<p>The atom to be parsed and built into a component tree</p>\n"}}],"type":{"type":"reference","id":5,"name":"default"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.buildComponentTreeFromAtom","hash":"buildComponentTreeFromAtom.buildComponentTreeFromAtom"},"text":{"comment":"<p>Build the component tree from the atom.</p>\n<h5>Returns:</h5><p>The root component of the component tree.</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":114,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L114"}],"parentId":267}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"buildComponentTreeFromAtom"},"text":{},"parentId":246},{"id":270,"name":"addTemplateFolder","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":133,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L133"}],"signatures":[{"id":271,"name":"addTemplateFolder","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A static method in the Atomizer class that adds a new template folder to the templateFolders array."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"If the templateFolder object's baseDir property does not already exist in Atomizer.templateFolders,\r\nthe templateFolder object is pushed into Atomizer.templateFolders.\r\nThen, the templates in the newly added folder are preloaded and pushed into Atomizer.templates.\r\nIf the baseDir already exists in Atomizer.templateFolders, a warning is logged."}]},{"tag":"@author","content":[{"kind":"text","text":"Ansh Sharma"}]}]},"parameters":[{"id":272,"name":"templateFolder","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An object containing the base directory and optional subdirectories for the template folder."}]},"type":{"type":"reflection","declaration":{"id":273,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":274,"name":"baseDir","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The base directory for the template folder."}]},"sources":[{"fileName":"atom/atomizer.ts","line":134,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L134"}],"type":{"type":"intrinsic","name":"string"}},{"id":275,"name":"htmlDir","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Optional subdirectory for HTML templates."}]},"sources":[{"fileName":"atom/atomizer.ts","line":135,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L135"}],"type":{"type":"intrinsic","name":"string"}},{"id":276,"name":"cssDir","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Optional subdirectory for CSS templates."}]},"sources":[{"fileName":"atom/atomizer.ts","line":136,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L136"}],"type":{"type":"intrinsic","name":"string"}},{"id":277,"name":"jsDir","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Optional subdirectory for JavaScript templates."}]},"sources":[{"fileName":"atom/atomizer.ts","line":137,"character":8,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L137"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[274,275,276,277]}],"sources":[{"fileName":"atom/atomizer.ts","line":133,"character":52,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L133"}]}},"text":{"comment":"<p>An object containing the base directory and optional subdirectories for the template folder.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.addTemplateFolder","hash":"addTemplateFolder.addTemplateFolder"},"text":{"comment":"<p>A static method in the Atomizer class that adds a new template folder to the templateFolders array.</p>\n<h5>Remarks:</h5><p>If the templateFolder object&#39;s baseDir property does not already exist in Atomizer.templateFolders,\nthe templateFolder object is pushed into Atomizer.templateFolders.\nThen, the templates in the newly added folder are preloaded and pushed into Atomizer.templates.\nIf the baseDir already exists in Atomizer.templateFolders, a warning is logged.</p>\n<h5>Author:</h5><p>Ansh Sharma</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":133,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L133"}],"parentId":270}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"addTemplateFolder"},"text":{},"parentId":246},{"id":278,"name":"getTemplate","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":160,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L160"}],"signatures":[{"id":279,"name":"getTemplate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A static method in the Atomizer class that retrieves a template with the specified name and index from the templates property."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- The requested template."}]},{"tag":"@remarks","content":[{"kind":"text","text":"If the template is found in the templates property, it is returned immediately.\r\nIf the template is not found, this method searches through all template folders for the specified name.\r\nIf a template is found, it is returned and cached in the templates property for future use.\r\nIf no template is found, an error message is logged and an empty string is returned."}]},{"tag":"@author","content":[{"kind":"text","text":"Ansh Sharma"}]}]},"parameters":[{"id":280,"name":"templateName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the template to retrieve."}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>The name of the template to retrieve.</p>\n"}},{"id":281,"name":"templateFolderIndex","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The index of the folder containing the template. Defaults to 0."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0","text":{"comment":"<p>The index of the folder containing the template. Defaults to 0.</p>\n"}}],"type":{"type":"reference","id":287,"name":"AtomizerTemplate"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.getTemplate","hash":"getTemplate.getTemplate"},"text":{"comment":"<p>A static method in the Atomizer class that retrieves a template with the specified name and index from the templates property.</p>\n<h5>Returns:</h5><ul>\n<li>The requested template.</li>\n</ul>\n<h5>Remarks:</h5><p>If the template is found in the templates property, it is returned immediately.\nIf the template is not found, this method searches through all template folders for the specified name.\nIf a template is found, it is returned and cached in the templates property for future use.\nIf no template is found, an error message is logged and an empty string is returned.</p>\n<h5>Author:</h5><p>Ansh Sharma</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":160,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L160"}],"parentId":278}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"getTemplate"},"text":{},"parentId":246},{"id":282,"name":"buildComponentTree","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":207,"character":18,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L207"}],"signatures":[{"id":283,"name":"buildComponentTree","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Build the component tree from the HTML string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The root component of the component tree."}]}]},"parameters":[{"id":284,"name":"html","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The HTML string to be parsed and built into a component tree"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>The HTML string to be parsed and built into a component tree</p>\n"}}],"type":{"type":"reference","id":5,"name":"default"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Method.buildComponentTree","hash":"buildComponentTree.buildComponentTree"},"text":{"comment":"<p>Build the component tree from the HTML string.</p>\n<h5>Returns:</h5><p>The root component of the component tree.</p>\n"},"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":207,"character":4,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L207"}],"parentId":282}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"buildComponentTree"},"text":{},"parentId":246},{"id":285,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":286,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":246,"name":"default"},"is":{"declaration":false},"location":{"query":"index.Atomizer.Constructor.constructor","hash":"constructor.new Atomizer"},"text":{},"parentId":285}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":"constructor"},"text":{},"parentId":246}],"groups":[{"title":"Properties","children":[247,253,254]},{"title":"Methods","children":[258,262,267,270,278,282]},{"title":"Constructors","children":[285]}],"sources":[{"fileName":"atom/atomizer.ts","fullFileName":"D:/Web/SolarisUI/src/atom/atomizer.ts","line":24,"character":21,"url":"https://github.com/SujalChoudhari/SolarisUI/blob/1201f32/src/atom/atomizer.ts#L24"}],"is":{"declaration":true},"location":{"query":"index.Class.Atomizer","hash":""},"text":{"comment":"\n<a href=\"#atomizer\" id=\"atomizer\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Atomizer</h2>\n</a>\n<p>An utility class for loading/parsing and creating templates.</p>\n<h5>Remarks:</h5><p>This class is responsible for loading the templates from the template folder.\nIt also provides a function to build the component tree from the HTML string.</p>\n<h5>Author:</h5><p>Sujal Choudhari &lt;sjlchoudhari.gmail.com&gt;</p>\n"},"parentId":1,"hierarchy":[{"name":"Atomizer","isTarget":true,"linkId":"246"}]}
